!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
      path: 'features/img_train.csv'
    },
    model: !obj:pylearn2.models.mlp.MLP {
      input_space: !obj:pylearn2.space.Conv2DSpace {
         shape: [129, 30],
         num_channels: 1
      },
      layers: [
         !obj:pylearn2.models.mlp.ConvRectifiedLinear {
       layer_name: 'h0',
       output_channels: 32,
       kernel_shape: [5, 5],
       pool_shape: [3, 3],
       pool_stride: [2, 2],
       border_mode: "full",
       irange: .0001
         },
        !obj:pylearn2.models.mlp.ConvRectifiedLinear {
       layer_name: 'h1',
       output_channels: 32,
       kernel_shape: [5, 5],
       pool_shape: [3, 3],
       pool_stride: [2, 2],
       border_mode: "full",
       irange: .01
         },
        !obj:pylearn2.models.mlp.ConvRectifiedLinear {
       layer_name: 'h2',
       output_channels: 64,
       kernel_shape: [5, 5],
       pool_shape: [3, 3],
       pool_stride: [2, 2],
       border_mode: "full",
       irange: .01
         },
       !obj:pylearn2.models.mlp.Sigmoid {
      layer_name: 'h3',
      dim: 5000,
      irange: 0.01
      },
         !obj:pylearn2.models.mlp.Softmax {
       layer_name: 'y',
       n_classes: 2,
       irange: 0.
         }
        ]
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
      batch_size: 50,
      learning_rate: .5,
      learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
    init_momentum: 0.5,
      },
      monitoring_dataset:
    {
        'train' : *train,
        'valid' : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
          path: 'features/img_valid.csv'
        },
        'test'  : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
          path: 'features/img_test.csv'
        }
    },
      cost: !obj:pylearn2.costs.cost.SumOfCosts { costs: [
    !obj:pylearn2.costs.cost.MethodCost {
        method: 'cost_from_X'
    }, !obj:pylearn2.costs.mlp.WeightDecay {
        coeffs: [ .00005, .00005, .00005, .00005, .00005 ]
    }
  ]
      },
      termination_criterion: !obj:pylearn2.termination_criteria.And {
    criteria: [
        !obj:pylearn2.termination_criteria.MonitorBased {
      channel_name: "valid_y_misclass"
        },
        !obj:pylearn2.termination_criteria.EpochCounter {
      max_epochs: 10000
        }
    ]
      }
    },
    extensions: [
      !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
     channel_name: 'valid_y_misclass',
     save_path: "cnn_best.pkl"
      }
    ]
  }
  
